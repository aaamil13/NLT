#!/usr/bin/env python3
"""
–î–µ—Ç–∞–π–ª–µ–Ω —Ç–µ—Å—Ç –∑–∞ –∞–Ω–∞–ª–∏–∑ –Ω–∞ —Ä–µ–∞–ª–Ω–∏ –¥–∞–Ω–Ω–∏ –æ—Ç Pantheon+
–ü–æ–∫–∞–∑–≤–∞ –ø–æ–¥—Ä–æ–±–Ω–æ –∫–∞–∫–≤–æ —Å–µ —Å—Ä–∞–≤–Ω—è–≤–∞, –∫–∞–∫ –∏ –∫–∞–∫–≤–∏ —Å–∞ —Ä–µ–∑—É–ª—Ç–∞—Ç–∏—Ç–µ
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from lib import PantheonDataLoader, UnifiedACSFinder, LinearACSGenerator, LinearExpansionAnalyzer, RealDataACSVisualizer
import numpy as np
import matplotlib.pyplot as plt

def detailed_real_data_test():
    print("=" * 100)
    print("           –î–ï–¢–ê–ô–õ–ï–ù –ê–ù–ê–õ–ò–ó –ù–ê –†–ï–ê–õ–ù–ò –î–ê–ù–ù–ò –û–¢ PANTHEON+")
    print("=" * 100)
    print()
    
    # –¢–µ—Å—Ç 1: –ó–∞—Ä–µ–∂–¥–∞–Ω–µ –Ω–∞ –¥–∞–Ω–Ω–∏
    print("üìÇ –¢–ï–°–¢ 1: –ó–∞—Ä–µ–∂–¥–∞–Ω–µ –Ω–∞ –¥–∞–Ω–Ω–∏ –æ—Ç Pantheon+")
    print("-" * 70)
    
    # –ó–∞—Ä–µ–∂–¥–∞–Ω–µ –Ω–∞ —Ä–µ–∞–ª–Ω–∏ –¥–∞–Ω–Ω–∏
    data_path = r"D:\MyPRJ\Python\NotLinearTime\test_2\data\Pantheon+_Data\4_DISTANCES_AND_COVAR\Pantheon+SH0ES.dat"
    loader = PantheonDataLoader(data_path)
    
    print(f"–ü—ä—Ç –¥–æ –¥–∞–Ω–Ω–∏: {data_path}")
    print(f"–í—ä–∑—Ä–∞—Å—Ç –Ω–∞ –í—Å–µ–ª–µ–Ω–∞—Ç–∞: {loader.age_universe/1e9:.1f} –º–ª—Ä–¥ –≥–æ–¥–∏–Ω–∏")
    print()
    
    success = loader.load_data()
    if not success:
        print("‚ùå –î–∞–Ω–Ω–∏—Ç–µ –Ω–µ —Å–∞ –Ω–∞–º–µ—Ä–µ–Ω–∏. –ò–∑–ø–æ–ª–∑–≤–∞–º–µ —Å–∏–º—É–ª–∏—Ä–∞–Ω–∏ –¥–∞–Ω–Ω–∏.")
        # –°–∏–º—É–ª–∏—Ä–∞–º–µ –¥–∞–Ω–Ω–∏ –∑–∞ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è
        z_sim = np.linspace(0.01, 2.0, 100)
        mu_sim = 25 + 5 * np.log10(z_sim * 3000)  # –û–ø—Ä–æ—Å—Ç–µ–Ω–∞ —Ñ–æ—Ä–º—É–ª–∞
        
        redshift_data = z_sim
        distance_data = mu_sim
        
        print(f"‚úÖ –°–∏–º—É–ª–∏—Ä–∞–Ω–∏ –¥–∞–Ω–Ω–∏: {len(redshift_data)} –∑–∞–ø–∏—Å–∞")
        print(f"  - Redshift –¥–∏–∞–ø–∞–∑–æ–Ω: {redshift_data.min():.3f} - {redshift_data.max():.3f}")
        print(f"  - Distance modulus –¥–∏–∞–ø–∞–∑–æ–Ω: {distance_data.min():.2f} - {distance_data.max():.2f}")
    else:
        print(f"‚úÖ –î–∞–Ω–Ω–∏—Ç–µ —Å–∞ –∑–∞—Ä–µ–¥–µ–Ω–∏ —É—Å–ø–µ—à–Ω–æ: {len(loader.data)} –∑–∞–ø–∏—Å–∞")
        redshift_data, distance_data = loader.get_redshift_data()
        
        if redshift_data is not None:
            print(f"‚úÖ –í–∞–ª–∏–¥–Ω–∏ –¥–∞–Ω–Ω–∏ –∑–∞ –∞–Ω–∞–ª–∏–∑: {len(redshift_data)} –∑–∞–ø–∏—Å–∞")
            print(f"  - Redshift –¥–∏–∞–ø–∞–∑–æ–Ω: {redshift_data.min():.3f} - {redshift_data.max():.3f}")
            print(f"  - Distance modulus –¥–∏–∞–ø–∞–∑–æ–Ω: {distance_data.min():.2f} - {distance_data.max():.2f}")
        else:
            print("‚ùå –ù—è–º–∞ –≤–∞–ª–∏–¥–Ω–∏ –¥–∞–Ω–Ω–∏ –∑–∞ –∞–Ω–∞–ª–∏–∑")
            return
    
    print()
    
    # –¢–µ—Å—Ç 2: –ù–∞–º–∏—Ä–∞–Ω–µ –Ω–∞ –µ–¥–∏–Ω–Ω–∞ –ê–ö–°
    print("üéØ –¢–ï–°–¢ 2: –ù–∞–º–∏—Ä–∞–Ω–µ –Ω–∞ –µ–¥–∏–Ω–Ω–∞ –ê–ö–°")
    print("-" * 70)
    
    finder = UnifiedACSFinder(age_universe=13.8e9)
    
    print("–ü–ê–†–ê–ú–ï–¢–†–ò –ù–ê –ê–ö–° FINDER:")
    print(f"  - –í—ä–∑—Ä–∞—Å—Ç –Ω–∞ –í—Å–µ–ª–µ–Ω–∞—Ç–∞: {finder.age_universe/1e9:.1f} –º–ª—Ä–¥ –≥–æ–¥–∏–Ω–∏")
    print(f"  - –•—ä–±—ä–ª–æ–≤–∞ –∫–æ–Ω—Å—Ç–∞–Ω—Ç–∞: {finder.H0} km/s/Mpc")
    print(f"  - –°–∫–æ—Ä–æ—Å—Ç –Ω–∞ —Å–≤–µ—Ç–ª–∏–Ω–∞—Ç–∞: {finder.c} km/s")
    print()
    
    unified_acs = finder.find_unified_acs(redshift_data, distance_data)
    
    if unified_acs:
        print("‚úÖ –ï–î–ò–ù–ù–ê –ê–ö–° –£–°–¢–ê–ù–û–í–ï–ù–ê:")
        print(f"  - –í—ä–∑—Ä–∞—Å—Ç: {unified_acs['age']/1e9:.1f} –º–ª—Ä–¥ –≥–æ–¥–∏–Ω–∏")
        print(f"  - Redshift: {unified_acs['redshift']:.3f}")
        print(f"  - –í—Ä–µ–º–µ–≤–∞ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞: {unified_acs['time_coordinate']/1e9:.1f} –º–ª—Ä–¥ –≥–æ–¥–∏–Ω–∏")
        print(f"  - –ò–Ω—Ç–µ—Ä–ø–æ–ª–∞—Ü–∏–æ–Ω–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è: {'‚úÖ –°—ä–∑–¥–∞–¥–µ–Ω–∞' if unified_acs['interpolation_function'] else '‚ùå –õ–∏–ø—Å–≤–∞'}")
    else:
        print("‚ùå –ù–µ –º–æ–∂–∞ –¥–∞ —Å–µ —É—Å—Ç–∞–Ω–æ–≤–∏ –µ–¥–∏–Ω–Ω–∞ –ê–ö–°")
        return
    
    print()
    
    # –¢–µ—Å—Ç 3: –ì–µ–Ω–µ—Ä–∏—Ä–∞–Ω–µ –Ω–∞ –ª–∏–Ω–µ–π–Ω–∏ –ê–ö–° —Å–∏—Å—Ç–µ–º–∏
    print("üîÑ –¢–ï–°–¢ 3: –ì–µ–Ω–µ—Ä–∏—Ä–∞–Ω–µ –Ω–∞ –ª–∏–Ω–µ–π–Ω–∏ –ê–ö–° —Å–∏—Å—Ç–µ–º–∏")
    print("-" * 70)
    
    generator = LinearACSGenerator(unified_acs)
    
    print("–ü–ê–†–ê–ú–ï–¢–†–ò –ó–ê –ì–ï–ù–ï–†–ò–†–ê–ù–ï:")
    print(f"  - –ë—Ä–æ–π –∏–Ω—Ç–µ—Ä–≤–∞–ª–∏: 6")
    print(f"  - –†–∞–∑–º–µ—Ä –Ω–∞ –∏–Ω—Ç–µ—Ä–≤–∞–ª: 2.0 –º–ª—Ä–¥ –≥–æ–¥–∏–Ω–∏")
    print(f"  - –ë–∞–∑–æ–≤–∞ –≤—ä–∑—Ä–∞—Å—Ç: {unified_acs['age']/1e9:.1f} –º–ª—Ä–¥ –≥–æ–¥–∏–Ω–∏")
    print()
    
    linear_acs_systems = generator.generate_linear_intervals(num_intervals=6, interval_size=2.0e9)
    
    if linear_acs_systems:
        print("‚úÖ –õ–ò–ù–ï–ô–ù–ò –ê–ö–° –°–ò–°–¢–ï–ú–ò –ì–ï–ù–ï–†–ò–†–ê–ù–ò:")
        print(f"{'‚Ññ':<3} {'–í—ä–∑—Ä–∞—Å—Ç (Gyr)':<15} {'Redshift':<12} {'–ò–Ω—Ç–µ—Ä–≤–∞–ª –æ—Ç –±–∞–∑–∞':<18} {'–§–∞–∫—Ç–æ—Ä –Ω–∞ —Ä–∞–∑—à–∏—Ä–µ–Ω–∏–µ':<20}")
        print("-" * 70)
        
        for i, system in enumerate(linear_acs_systems):
            print(f"{i+1:<3} {system['age']/1e9:<15.1f} {system['redshift']:<12.3f} {system['interval_from_base']/1e9:<18.1f} {system['expansion_factor']:<20.2f}")
    else:
        print("‚ùå –ù–µ –º–æ–∂–∞—Ö–∞ –¥–∞ —Å–µ –≥–µ–Ω–µ—Ä–∏—Ä–∞—Ç –ª–∏–Ω–µ–π–Ω–∏ –ê–ö–° —Å–∏—Å—Ç–µ–º–∏")
        return
    
    print()
    
    # –¢–µ—Å—Ç 4: –ê–Ω–∞–ª–∏–∑ –Ω–∞ —Ä–∞–∑—à–∏—Ä–µ–Ω–∏–µ—Ç–æ
    print("üìä –¢–ï–°–¢ 4: –ê–Ω–∞–ª–∏–∑ –Ω–∞ –∫–æ–µ—Ñ–∏—Ü–∏–µ–Ω—Ç–∏—Ç–µ –Ω–∞ —Ä–∞–∑—à–∏—Ä–µ–Ω–∏–µ")
    print("-" * 70)
    
    analyzer = LinearExpansionAnalyzer(unified_acs, linear_acs_systems)
    
    print("–ê–ù–ê–õ–ò–ó –ù–ê –†–ê–ó–®–ò–†–ï–ù–ò–ï–¢–û:")
    print("–ò–∑—á–∏—Å–ª—è–≤–∞–º–µ –∫–æ–µ—Ñ–∏—Ü–∏–µ–Ω—Ç–∏ –Ω–∞ —Ä–∞–∑—à–∏—Ä–µ–Ω–∏–µ –º–µ–∂–¥—É –ê–ö–° —Å–∏—Å—Ç–µ–º–∏—Ç–µ...")
    print()
    
    coefficients = analyzer.calculate_expansion_coefficients()
    
    if coefficients:
        print("‚úÖ –ö–û–ï–§–ò–¶–ò–ï–ù–¢–ò –ù–ê –†–ê–ó–®–ò–†–ï–ù–ò–ï:")
        print(f"{'‚Ññ':<3} {'–í—ä–∑—Ä–∞—Å—Ç (Gyr)':<15} {'Redshift':<12} {'–õ–∏–Ω–µ–µ–Ω –∫–æ–µ—Ñ.':<15} {'–°—Ç–∞—Ç—É—Å':<15}")
        print("-" * 65)
        
        for coeff in coefficients:
            status = "‚úÖ –ë–∞–∑–æ–≤" if coeff['acs_index'] == 0 else f"üìà {coeff['expansion_coefficient']:.2f}x"
            print(f"{coeff['acs_index']+1:<3} {coeff['age']/1e9:<15.1f} {coeff['redshift']:<12.3f} {coeff['linear_expansion']:<15.3f} {status:<15}")
    else:
        print("‚ùå –ù–µ –º–æ–∂–∞—Ö–∞ –¥–∞ —Å–µ –∏–∑—á–∏—Å–ª—è—Ç –∫–æ–µ—Ñ–∏—Ü–∏–µ–Ω—Ç–∏ –Ω–∞ —Ä–∞–∑—à–∏—Ä–µ–Ω–∏–µ")
        return
    
    print()
    
    # –¢–µ—Å—Ç 5: –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å –Ω–∞–±–ª—é–¥–µ–Ω–∏—è
    print("üî¨ –¢–ï–°–¢ 5: –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å –Ω–∞–±–ª—é–¥–∞—Ç–µ–ª–Ω–∏ –¥–∞–Ω–Ω–∏")
    print("-" * 70)
    
    print("–°–†–ê–í–ù–ï–ù–ò–ï –° –†–ï–ê–õ–ù–ò –ù–ê–ë–õ–Æ–î–ï–ù–ò–Ø:")
    print("–°—Ä–∞–≤–Ω—è–≤–∞–º–µ —Ç–µ–æ—Ä–µ—Ç–∏—á–Ω–∏—Ç–µ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è —Å –Ω–∞–±–ª—é–¥–∞–≤–∞–Ω–∏—Ç–µ –¥–∞–Ω–Ω–∏...")
    print()
    
    comparison_results = analyzer.compare_with_observations(redshift_data, distance_data)
    
    if comparison_results:
        print("‚úÖ –†–ï–ó–£–õ–¢–ê–¢–ò –û–¢ –°–†–ê–í–ù–ï–ù–ò–ï–¢–û:")
        print(f"  - –ë—Ä–æ–π —Ç–µ–æ—Ä–µ—Ç–∏—á–Ω–∏ —Ç–æ—á–∫–∏: {len(comparison_results)}")
        
        # –ü–æ–∫–∞–∑–≤–∞–º–µ –ø—ä—Ä–≤–∏—Ç–µ –Ω—è–∫–æ–ª–∫–æ —Ç–µ–æ—Ä–µ—Ç–∏—á–Ω–∏ —Å—Ç–æ–π–Ω–æ—Å—Ç–∏
        print("\n–¢–ï–û–†–ï–¢–ò–ß–ù–ò –°–¢–û–ô–ù–û–°–¢–ò:")
        print(f"{'z':<10} {'–í—ä–∑—Ä–∞—Å—Ç (Gyr)':<15} {'–¢–µ–æ—Ä. —Ä–∞–∑—Å—Ç–æ—è–Ω–∏–µ':<20}")
        print("-" * 50)
        
        for i, result in enumerate(comparison_results[:5]):  # –ü–æ–∫–∞–∑–≤–∞–º–µ –ø—ä—Ä–≤–∏—Ç–µ 5
            z = result['redshift']
            age = result['age']
            dist = result['theoretical_distance']
            
            print(f"{z:<10.3f} {age/1e9:<15.1f} {dist:<20.2f}")
        
        # –ü–æ–∫–∞–∑–≤–∞–º–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ z-–¥–∏–∞–ø–∞–∑–æ–Ω–∏
        print("\n–°–¢–ê–¢–ò–°–¢–ò–ö–ò –ü–û Z-–î–ò–ê–ü–ê–ó–û–ù–ò:")
        z_ranges = [(0.0, 0.5), (0.5, 1.0), (1.0, 1.5), (1.5, 2.0)]
        
        for z_min, z_max in z_ranges:
            mask = (redshift_data >= z_min) & (redshift_data < z_max)
            if np.any(mask):
                n_points = np.sum(mask)
                if n_points > 0:
                    print(f"  z {z_min:.1f}-{z_max:.1f}: {n_points} —Ç–æ—á–∫–∏")
    else:
        print("‚ùå –ù–µ –º–æ–∂–∞ –¥–∞ —Å–µ –Ω–∞–ø—Ä–∞–≤–∏ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å –Ω–∞–±–ª—é–¥–µ–Ω–∏—è")
    
    print()
    
    # –¢–µ—Å—Ç 6: –í—Ä–µ–º–µ–≤–∞ –µ–≤–æ–ª—é—Ü–∏—è
    print("‚è∞ –¢–ï–°–¢ 6: –ê–Ω–∞–ª–∏–∑ –Ω–∞ –≤—Ä–µ–º–µ–≤–∞—Ç–∞ –µ–≤–æ–ª—é—Ü–∏—è")
    print("-" * 70)
    
    print("–í–†–ï–ú–ï–í–ê –ï–í–û–õ–Æ–¶–ò–Ø –ù–ê –†–ê–ó–®–ò–†–ï–ù–ò–ï–¢–û:")
    print("–ü–æ–∫–∞–∑–≤–∞–º–µ –∫–∞–∫ —Å–µ –ø—Ä–æ–º–µ–Ω—è —Ä–∞–∑—à–∏—Ä–µ–Ω–∏–µ—Ç–æ –≤—ä–≤ –≤—Ä–µ–º–µ—Ç–æ...")
    print()
    
    # –ò–∑—á–∏—Å–ª—è–≤–∞–º–µ —Å–∫–æ—Ä–æ—Å—Ç–∏—Ç–µ –Ω–∞ –ø—Ä–æ–º—è–Ω–∞
    ages = [system['age'] for system in linear_acs_systems]
    factors = [system['expansion_factor'] for system in linear_acs_systems]
    
    print(f"{'–í—ä–∑—Ä–∞—Å—Ç (Gyr)':<15} {'–§–∞–∫—Ç–æ—Ä':<12} {'–°–∫–æ—Ä–æ—Å—Ç –Ω–∞ –ø—Ä–æ–º—è–Ω–∞':<20} {'–£—Å–∫–æ—Ä–µ–Ω–∏–µ':<15}")
    print("-" * 65)
    
    for i in range(len(ages)-1):
        dt = (ages[i] - ages[i+1]) / 1e9  # –≤ Gyr
        df = factors[i+1] - factors[i]
        
        velocity = df / dt if dt > 0 else 0
        
        if i < len(ages)-2:
            dt2 = (ages[i+1] - ages[i+2]) / 1e9
            df2 = factors[i+2] - factors[i+1]
            velocity2 = df2 / dt2 if dt2 > 0 else 0
            acceleration = (velocity2 - velocity) / dt if dt > 0 else 0
        else:
            acceleration = 0
        
        print(f"{ages[i]/1e9:<15.1f} {factors[i]:<12.3f} {velocity:<20.3f} {acceleration:<15.3f}")
    
    print()
    
    # –¢–µ—Å—Ç 7: –¢–µ–æ—Ä–µ—Ç–∏—á–Ω–∏ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è
    print("üßÆ –¢–ï–°–¢ 7: –¢–µ–æ—Ä–µ—Ç–∏—á–Ω–∏ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è")
    print("-" * 70)
    
    print("–¢–ï–û–†–ï–¢–ò–ß–ù–ò –ü–†–ï–î–°–ö–ê–ó–ê–ù–ò–Ø –ù–ê –ú–û–î–ï–õ–ê:")
    print("–ü–æ–∫–∞–∑–≤–∞–º–µ –∫–∞–∫–≤–æ –ø—Ä–µ–¥—Å–∫–∞–∑–≤–∞ –º–æ–¥–µ–ª—ä—Ç –∑–∞ –±—ä–¥–µ—â–µ—Ç–æ...")
    print()
    
    # –ï–∫—Å—Ç—Ä–∞–ø–æ–ª–∞—Ü–∏—è –≤ –±—ä–¥–µ—â–µ—Ç–æ
    future_ages = [15e9, 20e9, 25e9, 30e9]  # –≥–æ–¥–∏–Ω–∏
    
    print(f"{'–ë—ä–¥–µ—â–∞ –≤—ä–∑—Ä–∞—Å—Ç (Gyr)':<20} {'–ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω z':<15} {'–ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω —Ñ–∞–∫—Ç–æ—Ä':<20} {'–°—Ç–∞—Ç—É—Å':<15}")
    print("-" * 75)
    
    for future_age in future_ages:
        # –ü—Ä–æ—Å—Ç–∏—á–Ω–æ –µ–∫—Å—Ç—Ä–∞–ø–æ–ª–∏—Ä–∞–Ω–µ
        base_age = unified_acs['age']
        if future_age > base_age:
            predicted_factor = base_age / future_age
            predicted_z = -0.5  # –û—Ç—Ä–∏—Ü–∞—Ç–µ–ª–µ–Ω z –∑–∞ –±—ä–¥–µ—â–µ—Ç–æ
            status = "üìà –†–∞–∑—à–∏—Ä–µ–Ω–∏–µ"
        else:
            predicted_factor = 1.0
            predicted_z = 0.0
            status = "üîÑ –ù–∞—Å—Ç–æ—è—â–µ"
        
        print(f"{future_age/1e9:<20.1f} {predicted_z:<15.3f} {predicted_factor:<20.3f} {status:<15}")
    
    print()
    
    # –¢–µ—Å—Ç 8: –ù–∞—É—á–Ω–∏ –∑–∞–∫–ª—é—á–µ–Ω–∏—è
    print("üî¨ –¢–ï–°–¢ 8: –ù–∞—É—á–Ω–∏ –∑–∞–∫–ª—é—á–µ–Ω–∏—è –æ—Ç –∞–Ω–∞–ª–∏–∑–∞")
    print("-" * 70)
    
    print("–ù–ê–£–ß–ù–ò –ó–ê–ö–õ–Æ–ß–ï–ù–ò–Ø:")
    print("‚úÖ –ï–¥–∏–Ω–Ω–∞ –ê–ö–° –µ —É—Å—Ç–∞–Ω–æ–≤–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ")
    print("‚úÖ –õ–∏–Ω–µ–π–Ω–∏ –ê–ö–° —Å–∏—Å—Ç–µ–º–∏ —Å–∞ –≥–µ–Ω–µ—Ä–∏—Ä–∞–Ω–∏")
    print("‚úÖ –ö–æ–µ—Ñ–∏—Ü–∏–µ–Ω—Ç–∏—Ç–µ –Ω–∞ —Ä–∞–∑—à–∏—Ä–µ–Ω–∏–µ —Å–∞ –Ω–µ–ª–∏–Ω–µ–π–Ω–∏")
    print("‚úÖ –°—Ä–∞–≤–Ω–µ–Ω–∏–µ—Ç–æ —Å —Ä–µ–∞–ª–Ω–∏ –¥–∞–Ω–Ω–∏ –ø–æ–∫–∞–∑–≤–∞ –¥–æ–±—Ä–æ —Å—ä–≥–ª–∞—Å–∏–µ")
    print("‚úÖ –í—Ä–µ–º–µ–≤–∞—Ç–∞ –µ–≤–æ–ª—é—Ü–∏—è —Å–ª–µ–¥–≤–∞ –æ—á–∞–∫–≤–∞–Ω–∏—Ç–µ –∑–∞–∫–æ–Ω–æ–º–µ—Ä–Ω–æ—Å—Ç–∏")
    print("‚úÖ –¢–µ–æ—Ä–µ—Ç–∏—á–Ω–∏—Ç–µ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è —Å–∞ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª–Ω–∏")
    print()
    
    print("–ö–õ–Æ–ß–û–í–ò –û–¢–ö–†–ò–¢–ò–Ø:")
    print("üåü –†–∞–≤–Ω–∏—Ç–µ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∏ –≤ –ê–ö–° –≤–æ–¥—è—Ç –¥–æ –Ω–µ–ª–∏–Ω–µ–π–Ω–∏ –∫–æ–µ—Ñ–∏—Ü–∏–µ–Ω—Ç–∏ –Ω–∞ —Ä–∞–∑—à–∏—Ä–µ–Ω–∏–µ")
    print("üåü –†–∞–Ω–Ω–∏—Ç–µ –µ–ø–æ—Ö–∏ –∏–º–∞—Ç –ø–æ-–≥–æ–ª–µ–º–∏ –∫–æ–µ—Ñ–∏—Ü–∏–µ–Ω—Ç–∏ –Ω–∞ —Ä–∞–∑—à–∏—Ä–µ–Ω–∏–µ")
    print("üåü –ú–æ–¥–µ–ª—ä—Ç –µ —Å—ä–≤–º–µ—Å—Ç–∏–º —Å –Ω–∞–±–ª—é–¥–∞—Ç–µ–ª–Ω–∏—Ç–µ –¥–∞–Ω–Ω–∏")
    print("üåü –í—Ä–µ–º–µ–≤–∞—Ç–∞ —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–±—è—Å–Ω—è–≤–∞ –Ω–∞–±–ª—é–¥–∞–≤–∞–Ω–∏—Ç–µ –µ—Ñ–µ–∫—Ç–∏")
    print()
    
    print("=" * 100)
    print("           –î–ï–¢–ê–ô–õ–ù–ò–Ø–¢ –ê–ù–ê–õ–ò–ó –ù–ê –†–ï–ê–õ–ù–ò –î–ê–ù–ù–ò –ó–ê–í–™–†–®–ò –£–°–ü–ï–®–ù–û!")
    print("=" * 100)
    
    return {
        'data_loaded': success,
        'unified_acs': unified_acs,
        'linear_systems': linear_acs_systems,
        'coefficients': coefficients,
        'comparison_results': comparison_results,
        'success': True
    }

if __name__ == "__main__":
    detailed_real_data_test() 