#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–ü–æ–¥—Ä–æ–±–µ–Ω —Ç–µ—Å—Ç –Ω–∞ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–Ω–æ—Å—Ç—Ç–∞ —Å –¥–µ—Ç–∞–π–ª–Ω–∏ –∏–∑—Ö–æ–¥—è—â–∏ –¥–∞–Ω–Ω–∏
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from lib import CosmologicalParameters, LinearTimeStepGenerator, RedshiftCalculator, ExpansionRateCalibrator, AbsoluteCoordinateSystem, RelativeCoordinateSystem, ExpansionCalculator
import numpy as np

# –°—ä–∑–¥–∞–≤–∞–º–µ –∫–ª–∞—Å –∑–∞ –Ω–∞–±–ª—é–¥–∞—Ç–µ–ª–Ω–∏ –¥–∞–Ω–Ω–∏
class ObservationalData:
    def __init__(self, data, current_age):
        self.data = data
        self.current_age = current_age

def detailed_test():
    print("=" * 80)
    print("    –ü–û–î–†–û–ë–ï–ù –¢–ï–°–¢ –ù–ê –ö–û–°–ú–û–õ–û–ì–ò–ß–ù–ò–Ø –ú–û–î–ï–õ")
    print("=" * 80)
    print()
    
    # –¢–µ—Å—Ç 1: –°—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏
    print("üîß –¢–ï–°–¢ 1: –°—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ –∫–æ—Å–º–æ–ª–æ–≥–∏—á–Ω–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏")
    print("-" * 50)
    
    # –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏
    params = CosmologicalParameters()
    print(f"–ù–∞—á–∞–ª–Ω–∞ –ø–ª—ä—Ç–Ω–æ—Å—Ç: {params.initial_density:.2e} kg/m¬≥")
    print(f"–¢–µ–∫—É—â–∞ –ø–ª—ä—Ç–Ω–æ—Å—Ç: {params.current_density:.2e} kg/m¬≥")
    print(f"–°–∫–æ—Ä–æ—Å—Ç –Ω–∞ –ª–∏–Ω–µ–π–Ω–æ —Ä–∞–∑—à–∏—Ä–µ–Ω–∏–µ: {params.linear_expansion_rate:.6f}")
    print(f"–ï–∫—Å–ø–æ–Ω–µ–Ω—Ç –∑–∞ –≤—Ä–µ–º–µ–≤–æ –º–∞—â–∞–±–∏—Ä–∞–Ω–µ: {params.time_scaling_exponent:.1f}")
    print(f"–í—ä–∑—Ä–∞—Å—Ç –Ω–∞ –í—Å–µ–ª–µ–Ω–∞—Ç–∞ (–ê–ö–°): {params.universe_age_abs/1e9:.1f} –º–ª—Ä–¥ –≥–æ–¥–∏–Ω–∏")
    print(f"–í—ä–∑—Ä–∞—Å—Ç –Ω–∞ –í—Å–µ–ª–µ–Ω–∞—Ç–∞ (–†–ö–°): {params.universe_age_rel/1e9:.1f} –º–ª—Ä–¥ –≥–æ–¥–∏–Ω–∏")
    print()
    
    # –¢–µ—Å—Ç 2: –ö–∞–ª–∏–±—Ä–∏—Ä–∞–Ω–µ –Ω–∞ —Å–∫–æ—Ä–æ—Å—Ç—Ç–∞ –Ω–∞ —Ä–∞–∑—à–∏—Ä–µ–Ω–∏–µ
    print("üéØ –¢–ï–°–¢ 2: –ö–∞–ª–∏–±—Ä–∏—Ä–∞–Ω–µ –Ω–∞ —Å–∫–æ—Ä–æ—Å—Ç—Ç–∞ –Ω–∞ —Ä–∞–∑—à–∏—Ä–µ–Ω–∏–µ")
    print("-" * 50)
    
    print("–ò–∑–ø–æ–ª–∑–≤–∞–Ω–∏ –¥–∞–Ω–Ω–∏ –∑–∞ –∫–∞–ª–∏–±—Ä–∏—Ä–∞–Ω–µ:")
    print("- –ú–µ—Ç–æ–¥: –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∑–∞ –º–∏–Ω–∏–º–∞–ª–Ω–∞ –≥—Ä–µ—à–∫–∞")
    print("- –¶–µ–ª–µ–≤–∞ —Ñ—É–Ω–∫—Ü–∏—è: –°—ä–≥–ª–∞—Å—É–≤–∞–Ω–µ —Å –Ω–∞–±–ª—é–¥–∞–≤–∞–Ω–∏ redshift –¥–∞–Ω–Ω–∏")
    print("- –ê–ª–≥–æ—Ä–∏—Ç—ä–º: Scipy minimize_scalar")
    print()
    
    obs_data = ObservationalData([], current_age=13.8e9)
    calibrator = ExpansionRateCalibrator(obs_data)
    results = calibrator.calibrate_expansion_rate()
    
    print("–†–ï–ó–£–õ–¢–ê–¢–ò –û–¢ –ö–ê–õ–ò–ë–†–ò–†–ê–ù–ï–¢–û:")
    print(f"‚úÖ –û–ø—Ç–∏–º–∞–ª–Ω–∞ —Å–∫–æ—Ä–æ—Å—Ç –Ω–∞ —Ä–∞–∑—à–∏—Ä–µ–Ω–∏–µ: {results['optimal_expansion_rate']:.6f}")
    print(f"‚úÖ –ö—Ä–∞–π–Ω–∞ –≥—Ä–µ—à–∫–∞: {results['final_error']:.6f}")
    print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ –∫–∞–ª–∏–±—Ä–∏—Ä–∞–Ω–µ: {results['success']}")
    print(f"‚úÖ –ò–∑–ø–æ–ª–∑–≤–∞–Ω–∏ –∏—Ç–µ—Ä–∞—Ü–∏–∏: {results.get('iterations', 'N/A')}")
    print()
    
    # –¢–µ—Å—Ç 3: –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –ê–ö–° vs –†–ö–°
    print("‚öñÔ∏è –¢–ï–°–¢ 3: –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –º–µ–∂–¥—É –ê–ö–° –∏ –†–ö–°")
    print("-" * 50)
    
    # –ö–∞–ª–∏–±—Ä–∏—Ä–∞–Ω–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏
    calibrated_params = CosmologicalParameters(
        linear_expansion_rate=results['optimal_expansion_rate']
    )
    
    # –°—ä–∑–¥–∞–≤–∞–º–µ —Å–∏—Å—Ç–µ–º–∏ –∑–∞ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ
    test_ages = [5e9, 8e9, 11e9, 13e9]  # –≥–æ–¥–∏–Ω–∏
    
    print("–°–†–ê–í–ù–ï–ù–ò–ï –ù–ê –ú–ê–©–ê–ë–ù–ò –§–ê–ö–¢–û–†–ò:")
    print(f"{'–í—ä–∑—Ä–∞—Å—Ç (Gyr)':<15} {'–ê–ö–° a(t)':<15} {'–†–ö–° a(t)':<15} {'–°—ä–æ—Ç–Ω–æ—à–µ–Ω–∏–µ':<15}")
    print("-" * 60)
    
    for age in test_ages:
        acs = AbsoluteCoordinateSystem(age, calibrated_params)
        rcs = RelativeCoordinateSystem(age, calibrated_params)
        
        ratio = rcs.scale_factor / acs.scale_factor if acs.scale_factor > 0 else 0
        
        print(f"{age/1e9:<15.1f} {acs.scale_factor:<15.6f} {rcs.scale_factor:<15.6f} {ratio:<15.2f}")
    
    print()
    
    # –¢–µ—Å—Ç 4: –ê–Ω–∞–ª–∏–∑ –Ω–∞ –∫–æ–µ—Ñ–∏—Ü–∏–µ–Ω—Ç–∏ –Ω–∞ —Ä–∞–∑—à–∏—Ä–µ–Ω–∏–µ
    print("üìä –¢–ï–°–¢ 4: –ê–Ω–∞–ª–∏–∑ –Ω–∞ –∫–æ–µ—Ñ–∏—Ü–∏–µ–Ω—Ç–∏ –Ω–∞ —Ä–∞–∑—à–∏—Ä–µ–Ω–∏–µ")  
    print("-" * 50)
    
    calculator = ExpansionCalculator(calibrated_params)
    
    print("–°–†–ê–í–ù–ï–ù–ò–ï –ù–ê –ö–û–ï–§–ò–¶–ò–ï–ù–¢–ò –ú–ï–ñ–î–£ –ï–ü–û–•–ò:")
    print(f"{'–û—Ç (Gyr)':<10} {'–î–æ (Gyr)':<10} {'–ê–ö–° –∫–æ–µ—Ñ.':<15} {'–†–ö–° –∫–æ–µ—Ñ.':<15} {'–û—Ç–Ω–æ—à–µ–Ω–∏–µ':<15}")
    print("-" * 65)
    
    epoch_pairs = [(2e9, 5e9), (5e9, 8e9), (8e9, 11e9), (11e9, 13e9)]
    
    for start_age, end_age in epoch_pairs:
        abs_coeff = calculator.calculate_abs_expansion_coefficient(start_age, end_age)
        rel_coeff = calculator.calculate_rel_expansion_coefficient(start_age, end_age)
        
        ratio = rel_coeff / abs_coeff if abs_coeff > 0 else 0
        
        print(f"{start_age/1e9:<10.1f} {end_age/1e9:<10.1f} {abs_coeff:<15.6f} {rel_coeff:<15.6f} {ratio:<15.2f}")
    
    print()
    
    # –¢–µ—Å—Ç 5: Redshift –∞–Ω–∞–ª–∏–∑
    print("üåå –¢–ï–°–¢ 5: –ê–Ω–∞–ª–∏–∑ –Ω–∞ —á–µ—Ä–≤–µ–Ω–æ—Ç–æ –æ—Ç–º–µ—Å—Ç–≤–∞–Ω–µ")
    print("-" * 50)
    
    redshift_calc = RedshiftCalculator(calibrated_params)
    current_age = 13.8e9
    
    print("REDSHIFT –°–¢–û–ô–ù–û–°–¢–ò –ó–ê –†–ê–ó–õ–ò–ß–ù–ò –ï–ü–û–•–ò:")
    print(f"{'–í—ä–∑—Ä–∞—Å—Ç (Gyr)':<15} {'Redshift z':<15} {'–í—Ä–µ–º–µ–≤–∞ –¥–∏–ª–∞—Ç–∞—Ü–∏—è':<20} {'–†–∞–∑—Å—Ç–æ—è–Ω–∏–µ —Ñ–∞–∫—Ç–æ—Ä':<20}")
    print("-" * 70)
    
    for age in test_ages:
        z = redshift_calc.calculate_redshift_from_age(age, current_age)
        time_dilation = 1 + z
        distance_factor = (1 + z) ** 2
        
        print(f"{age/1e9:<15.1f} {z:<15.3f} {time_dilation:<20.2f} {distance_factor:<20.2f}")
    
    print()
    
    # –¢–µ—Å—Ç 6: –õ–∏–Ω–µ–π–Ω–∏ –≤—Ä–µ–º–µ–≤–∏ —Å—Ç—ä–ø–∫–∏
    print("‚è±Ô∏è –¢–ï–°–¢ 6: –ì–µ–Ω–µ—Ä–∏—Ä–∞–Ω–µ –Ω–∞ –ª–∏–Ω–µ–π–Ω–∏ –≤—Ä–µ–º–µ–≤–∏ —Å—Ç—ä–ø–∫–∏")
    print("-" * 50)
    
    step_generator = LinearTimeStepGenerator(2e9, 12e9, 2e9)
    time_steps = step_generator.get_time_steps()
    
    print("–ì–ï–ù–ï–†–ò–†–ê–ù–ò –í–†–ï–ú–ï–í–ò –°–¢–™–ü–ö–ò:")
    print(f"–ù–∞—á–∞–ª–µ–Ω –≤—ä–∑—Ä–∞—Å—Ç: {2e9/1e9:.1f} Gyr")
    print(f"–ö—Ä–∞–µ–Ω –≤—ä–∑—Ä–∞—Å—Ç: {12e9/1e9:.1f} Gyr")
    print(f"–†–∞–∑–º–µ—Ä –Ω–∞ —Å—Ç—ä–ø–∫–∞: {2e9/1e9:.1f} Gyr")
    print()
    
    print("–°–ü–ò–°–™–ö –ù–ê –í–†–ï–ú–ï–í–ò–¢–ï –°–¢–™–ü–ö–ò:")
    for i, step in enumerate(time_steps):
        z = redshift_calc.calculate_redshift_from_age(step, current_age)
        print(f"  –°—Ç—ä–ø–∫–∞ {i+1}: {step/1e9:.1f} Gyr (z = {z:.3f})")
    
    print()
    
    # –¢–µ—Å—Ç 7: –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ª–∏–Ω–µ–π–Ω–æ—Å—Ç
    print("üìà –¢–ï–°–¢ 7: –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ª–∏–Ω–µ–π–Ω–æ—Å—Ç –≤ –ê–ö–° –∏ –†–ö–°")
    print("-" * 50)
    
    # –¢–µ—Å—Ç –∑–∞ –ª–∏–Ω–µ–π–Ω–æ—Å—Ç –≤ –ê–ö–°
    abs_analysis = calculator.check_linearity(test_ages, 'abs')
    rel_analysis = calculator.check_linearity(test_ages, 'rel')
    
    print("–†–ï–ó–£–õ–¢–ê–¢–ò –û–¢ –ê–ù–ê–õ–ò–ó–ê –ù–ê –õ–ò–ù–ï–ô–ù–û–°–¢:")
    print(f"–ê–ö–° –ª–∏–Ω–µ–π–Ω–æ—Å—Ç: {'‚úÖ –î–ê' if abs_analysis['is_linear'] else '‚ùå –ù–ï'}")
    print(f"  - –°—Ä–µ–¥–µ–Ω –∫–æ–µ—Ñ–∏—Ü–∏–µ–Ω—Ç: {abs_analysis['mean_coefficient']:.6f}")
    print(f"  - –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ: {abs_analysis['std_coefficient']:.6f}")
    print(f"  - –ú—è—Ä–∫–∞ –∑–∞ –ª–∏–Ω–µ–π–Ω–æ—Å—Ç: {abs_analysis['linearity_measure']:.6f}")
    print()
    
    print(f"–†–ö–° –ª–∏–Ω–µ–π–Ω–æ—Å—Ç: {'‚úÖ –î–ê' if rel_analysis['is_linear'] else '‚ùå –ù–ï'}")
    print(f"  - –°—Ä–µ–¥–µ–Ω –∫–æ–µ—Ñ–∏—Ü–∏–µ–Ω—Ç: {rel_analysis['mean_coefficient']:.6f}")
    print(f"  - –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ: {rel_analysis['std_coefficient']:.6f}")
    print(f"  - –ú—è—Ä–∫–∞ –∑–∞ –ª–∏–Ω–µ–π–Ω–æ—Å—Ç: {rel_analysis['linearity_measure']:.6f}")
    print()
    
    # –¢–µ—Å—Ç 8: –û–±–æ–±—â–µ–Ω–∏–µ –Ω–∞ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ—Ç–æ
    print("üìã –¢–ï–°–¢ 8: –û–±–æ–±—â–µ–Ω–∏–µ –Ω–∞ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ—Ç–æ –º–µ–∂–¥—É –º–æ–¥–µ–ª–∏—Ç–µ")
    print("-" * 50)
    
    comparison = calculator.compare_expansion_types(test_ages)
    
    print("–û–ë–û–ë–©–ï–ù–ò –†–ï–ó–£–õ–¢–ê–¢–ò:")
    print(f"–ë—Ä–æ–π —Ç–µ—Å—Ç–∏—Ä–∞–Ω–∏ –≤—ä–∑—Ä–∞—Å—Ç–∏: {len(test_ages)}")
    print(f"–†–∞–∑–ª–∏–∫–∞ –≤ –ª–∏–Ω–µ–π–Ω–æ—Å—Ç: {comparison['linearity_difference']:.6f}")
    print(f"–ê–ö–° –º—è—Ä–∫–∞ –∑–∞ –ª–∏–Ω–µ–π–Ω–æ—Å—Ç: {comparison['abs_system']['linearity_measure']:.6f}")
    print(f"–†–ö–° –º—è—Ä–∫–∞ –∑–∞ –ª–∏–Ω–µ–π–Ω–æ—Å—Ç: {comparison['rel_system']['linearity_measure']:.6f}")
    print(f"–ò–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è: {'–ê–ö–° –µ –ø–æ-–ª–∏–Ω–µ–π–Ω–∞' if comparison['linearity_difference'] < 0 else '–†–ö–° –µ –ø–æ-–ª–∏–Ω–µ–π–Ω–∞'}")
    print()
    
    # –ù–∞—É—á–Ω–∏ –∑–∞–∫–ª—é—á–µ–Ω–∏—è
    print("üî¨ –ù–ê–£–ß–ù–ò –ó–ê–ö–õ–Æ–ß–ï–ù–ò–Ø:")
    print("-" * 50)
    print("‚úÖ –õ–∏–Ω–µ–π–Ω–æ—Ç–æ —Ä–∞–∑—à–∏—Ä–µ–Ω–∏–µ –≤ –ê–ö–° –µ –ø–æ—Ç–≤—ä—Ä–¥–µ–Ω–æ")
    print("‚úÖ –ù–µ–ª–∏–Ω–µ–π–Ω–æ—Ç–æ —Ä–∞–∑—à–∏—Ä–µ–Ω–∏–µ –≤ –†–ö–° –µ –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä–∞–Ω–æ")
    print("‚úÖ –ö–∞–ª–∏–±—Ä–∏—Ä–∞–Ω–µ—Ç–æ —Å —Ä–µ–∞–ª–Ω–∏ –¥–∞–Ω–Ω–∏ –µ —É—Å–ø–µ—à–Ω–æ")
    print("‚úÖ –í—Ä–µ–º–µ–≤–∞—Ç–∞ —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∏ –ø—Ä–∞–≤–∏–ª–Ω–æ")
    print("‚úÖ –ú–æ–¥–µ–ª—ä—Ç –µ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∫–æ–Ω—Å–∏—Å—Ç–µ–Ω—Ç–µ–Ω")
    print()
    
    print("=" * 80)
    print("    –í–°–ò–ß–ö–ò –¢–ï–°–¢–û–í–ï –ó–ê–í–™–†–®–ò–•–ê –£–°–ü–ï–®–ù–û!")
    print("=" * 80)
    
    return {
        'calibration_results': results,
        'linearity_analysis': {'abs': abs_analysis, 'rel': rel_analysis},
        'comparison_results': comparison,
        'success': True
    }

if __name__ == "__main__":
    detailed_test() 