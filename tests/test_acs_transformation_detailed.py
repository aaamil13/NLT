#!/usr/bin/env python3
"""
–î–µ—Ç–∞–π–ª–µ–Ω —Ç–µ—Å—Ç –∑–∞ –ê–ö–° –≤—Ä–µ–º–µ–≤–∞—Ç–∞ —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏—è
–ü–æ–∫–∞–∑–≤–∞ –ø–æ–¥—Ä–æ–±–Ω–æ –∫–∞–∫ —Ä–∞–±–æ—Ç–∏ –≤—Ä–µ–º–µ–≤–∞—Ç–∞ —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏—è –∏ –∫–∞–∫–≤–æ —Å–µ —Å—Ä–∞–≤–Ω—è–≤–∞
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from lib import TimeTransformationModel, RedshiftTimeRelation, ExpansionAnalyzer, ExpansionVisualizer
import numpy as np
import matplotlib.pyplot as plt

def detailed_acs_transformation_test():
    print("=" * 100)
    print("       –î–ï–¢–ê–ô–õ–ï–ù –¢–ï–°–¢ –ù–ê –ê–ö–° –í–†–ï–ú–ï–í–ê–¢–ê –¢–†–ê–ù–°–§–û–†–ú–ê–¶–ò–Ø")
    print("=" * 100)
    print()
    
    # –¢–µ—Å—Ç 1: –°—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ –º–æ–¥–µ–ª–∏
    print("üîß –¢–ï–°–¢ 1: –°—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ –º–æ–¥–µ–ª–∏ –∑–∞ –≤—Ä–µ–º–µ–≤–∞ —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏—è")
    print("-" * 70)
    
    # –°—ä–∑–¥–∞–≤–∞–º–µ –º–æ–¥–µ–ª–∏
    k_expansion = 1e-3
    t_universe_gyr = 13.8
    H0 = 70
    
    time_model = TimeTransformationModel(k_expansion, t_universe_gyr)
    redshift_model = RedshiftTimeRelation(H0)
    
    print("–ü–ê–†–ê–ú–ï–¢–†–ò –ù–ê –ú–û–î–ï–õ–ê:")
    print(f"  - –ö–æ–µ—Ñ–∏—Ü–∏–µ–Ω—Ç –Ω–∞ —Ä–∞–∑—à–∏—Ä–µ–Ω–∏–µ (k): {k_expansion:.1e}")
    print(f"  - –í—ä–∑—Ä–∞—Å—Ç –Ω–∞ –í—Å–µ–ª–µ–Ω–∞—Ç–∞: {t_universe_gyr:.1f} Gyr")
    print(f"  - –•—ä–±—ä–ª–æ–≤–∞ –∫–æ–Ω—Å—Ç–∞–Ω—Ç–∞: {H0} km/s/Mpc")
    print(f"  - H0 –≤ SI –µ–¥–∏–Ω–∏—Ü–∏: {redshift_model.H0_SI:.2e} s‚Åª¬π")
    print(f"  - H0‚Åª¬π –≤ Gyr: {redshift_model.H0_inv_Gyr:.2f} Gyr")
    print()
    
    # –¢–µ—Å—Ç 2: –í—Ä–µ–º–µ–≤–∞ —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏—è
    print("‚è∞ –¢–ï–°–¢ 2: –ê–Ω–∞–ª–∏–∑ –Ω–∞ –≤—Ä–µ–º–µ–≤–∞—Ç–∞ —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏—è")
    print("-" * 70)
    
    # –¢–µ—Å—Ç–≤–∞–º–µ —Ä–∞–∑–ª–∏—á–Ω–∏ z —Å—Ç–æ–π–Ω–æ—Å—Ç–∏
    z_values = np.array([0.1, 0.5, 1.0, 2.0, 5.0, 10.0])
    
    print("–í–†–ï–ú–ï–í–ê–¢–ê –¢–†–ê–ù–°–§–û–†–ú–ê–¶–ò–Ø T(z) = 1/(1+z)^(3/2):")
    print(f"{'Redshift z':<12} {'–ü–ª—ä—Ç–Ω–æ—Å—Ç œÅ(z)':<15} {'–¢—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏—è T(z)':<20} {'–í—Ä–µ–º–µ–≤–∞ –¥–∏–ª–∞—Ç–∞—Ü–∏—è':<18}")
    print("-" * 70)
    
    for z in z_values:
        density = time_model.density_approximation(z)
        transform = time_model.time_transformation_factor(z)
        dilation = 1 / transform
        
        print(f"{z:<12.1f} {density:<15.2f} {transform:<20.6f} {dilation:<18.2f}")
    
    print()
    
    # –¢–µ—Å—Ç 3: –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –Ω–∞ –∞–±—Å–æ–ª—é—Ç–Ω–æ –∏ —Ä–µ–ª–∞—Ç–∏–≤–Ω–æ –≤—Ä–µ–º–µ
    print("üîÑ –¢–ï–°–¢ 3: –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –Ω–∞ –∞–±—Å–æ–ª—é—Ç–Ω–æ –∏ —Ä–µ–ª–∞—Ç–∏–≤–Ω–æ –≤—Ä–µ–º–µ")
    print("-" * 70)
    
    # –°—ä–∑–¥–∞–≤–∞–º–µ –º–∞—Å–∏–≤ –æ—Ç –∞–±—Å–æ–ª—é—Ç–Ω–∏ –≤—Ä–µ–º–µ–Ω–∞
    t_abs_array = np.linspace(1e9, 13.8e9, 10)  # –æ—Ç 1 –¥–æ 13.8 Gyr
    
    print("–°–†–ê–í–ù–ï–ù–ò–ï –ù–ê –í–†–ï–ú–ï–í–ò –°–ò–°–¢–ï–ú–ò:")
    print(f"{'t_abs (Gyr)':<12} {'dt_rel/dt_abs':<15} {'t_rel (Gyr)':<15} {'a_abs(t)':<12} {'a_rel(t)':<12}")
    print("-" * 70)
    
    for t_abs in t_abs_array:
        dt_rel_dt_abs = time_model.dt_rel_dt_abs(t_abs)
        t_rel = time_model.compute_relative_time(np.array([t_abs]))[0]
        a_abs = time_model.scale_factor_absolute(t_abs)
        a_rel = time_model.scale_factor_relative(t_rel)
        
        print(f"{t_abs/1e9:<12.1f} {dt_rel_dt_abs:<15.2e} {t_rel/1e9:<15.1f} {a_abs:<12.2e} {a_rel:<12.2e}")
    
    print()
    
    # –¢–µ—Å—Ç 4: Redshift-–≤—Ä–µ–º–µ –≤—Ä—ä–∑–∫–∞
    print("üåå –¢–ï–°–¢ 4: –ê–Ω–∞–ª–∏–∑ –Ω–∞ redshift-–≤—Ä–µ–º–µ –≤—Ä—ä–∑–∫–∞—Ç–∞")
    print("-" * 70)
    
    # –°—ä–∑–¥–∞–≤–∞–º–µ analyzer
    analyzer = ExpansionAnalyzer(time_model, redshift_model)
    
    print("REDSHIFT-–í–†–ï–ú–ï –í–†–™–ó–ö–ê:")
    print("–ò–∑—á–∏—Å–ª—è–≤–∞–º–µ –∫–∞–∫ —Å–µ –ø—Ä–æ–º–µ–Ω—è –≤—Ä–µ–º–µ—Ç–æ —Å —á–µ—Ä–≤–µ–Ω–æ—Ç–æ –æ—Ç–º–µ—Å—Ç–≤–∞–Ω–µ...")
    print()
    
    # –ì–µ–Ω–µ—Ä–∏—Ä–∞–º–µ –¥–∏—Å–∫—Ä–µ—Ç–Ω–∏ –≤—Ä–µ–º–µ–≤–∏ —Å—Ç—ä–ø–∫–∏
    timeline = analyzer.generate_discrete_timeline(delta_t_gyr=2.0, max_t_gyr=13.8)
    
    print(f"–ì–ï–ù–ï–†–ò–†–ê–ù–ò –í–†–ï–ú–ï–í–ò –°–¢–™–ü–ö–ò:")
    print(f"  - –†–∞–∑–º–µ—Ä –Ω–∞ —Å—Ç—ä–ø–∫–∞: 2.0 Gyr")
    print(f"  - –ú–∞–∫—Å–∏–º–∞–ª–Ω–æ –≤—Ä–µ–º–µ: 13.8 Gyr")
    print(f"  - –ë—Ä–æ–π —Å—Ç—ä–ø–∫–∏: {len(timeline)}")
    print()
    
    print(f"{'–°—Ç—ä–ø–∫–∞':<8} {'t_abs (Gyr)':<12} {'t_rel (Gyr)':<12} {'z (–∏–∑—á–∏—Å–ª–µ–Ω–æ)':<15} {'H(z)':<12}")
    print("-" * 65)
    
    for i, t_abs in enumerate(timeline):
        t_rel = time_model.compute_relative_time(np.array([t_abs]))[0]
        
        # –ò–∑—á–∏—Å–ª—è–≤–∞–º–µ z (–ø—Ä–∏–±–ª–∏–∑–∏—Ç–µ–ª–Ω–æ)
        z_approx = (13.8e9 / t_abs)**(2/3) - 1 if t_abs > 0 else 0
        z_approx = max(0, z_approx)
        
        H_z = redshift_model.hubble_parameter(z_approx)
        
        print(f"{i+1:<8} {t_abs/1e9:<12.1f} {t_rel/1e9:<12.1f} {z_approx:<15.3f} {H_z:<12.2e}")
    
    print()
    
    # –¢–µ—Å—Ç 5: –†–∞–∑—à–∏—Ä–µ–Ω–∏–µ –≤ —Ä–∞–∑–ª–∏—á–Ω–∏ —Å–∏—Å—Ç–µ–º–∏
    print("üìä –¢–ï–°–¢ 5: –ê–Ω–∞–ª–∏–∑ –Ω–∞ —Ä–∞–∑—à–∏—Ä–µ–Ω–∏–µ—Ç–æ –≤ —Ä–∞–∑–ª–∏—á–Ω–∏ —Å–∏—Å—Ç–µ–º–∏")
    print("-" * 70)
    
    # –ò–∑—á–∏—Å–ª—è–≤–∞–º–µ —Ä–∞–∑—à–∏—Ä–µ–Ω–∏—è—Ç–∞
    expansion_results = analyzer.compute_expansion_table(timeline)
    
    print("–¢–ê–ë–õ–ò–¶–ê –ù–ê –†–ê–ó–®–ò–†–ï–ù–ò–Ø–¢–ê:")
    print("–°—Ä–∞–≤–Ω—è–≤–∞–º–µ —Ä–∞–∑—à–∏—Ä–µ–Ω–∏—è—Ç–∞ –≤ –∞–±—Å–æ–ª—é—Ç–Ω–∞ –∏ —Ä–µ–ª–∞—Ç–∏–≤–Ω–∞ —Å–∏—Å—Ç–µ–º–∞...")
    print()
    
    if expansion_results:
        print("‚úÖ –†–ï–ó–£–õ–¢–ê–¢–ò –û–¢ –ò–ó–ß–ò–°–õ–ï–ù–ò–Ø–¢–ê:")
        print(f"  - –ë—Ä–æ–π –∏–∑—á–∏—Å–ª–µ–Ω–∏ —Ç–æ—á–∫–∏: {len(expansion_results['t_abs_gyr'])}")
        print(f"  - –î–∏–∞–ø–∞–∑–æ–Ω –Ω–∞ –∞–±—Å–æ–ª—é—Ç–Ω–æ—Ç–æ –≤—Ä–µ–º–µ: {expansion_results['t_abs_gyr'][0]:.1f} - {expansion_results['t_abs_gyr'][-1]:.1f} Gyr")
        print(f"  - –î–∏–∞–ø–∞–∑–æ–Ω –Ω–∞ —Ä–µ–ª–∞—Ç–∏–≤–Ω–æ—Ç–æ –≤—Ä–µ–º–µ: {expansion_results['t_rel_normalized'][0]:.1f} - {expansion_results['t_rel_normalized'][-1]:.1f} Gyr")
        print()
        
        # –ü–æ–∫–∞–∑–≤–∞–º–µ –ø—ä—Ä–≤–∏—Ç–µ –Ω—è–∫–æ–ª–∫–æ –∑–∞–ø–∏—Å–∞
        print("–ü–™–†–í–ò 5 –ó–ê–ü–ò–°–ê –û–¢ –¢–ê–ë–õ–ò–¶–ê–¢–ê:")
        print(f"{'t_abs (Gyr)':<12} {'t_rel (Gyr)':<12} {'a_abs':<12} {'a_rel':<12} {'z':<10} {'T(z)':<12}")
        print("-" * 75)
        
        for i in range(min(5, len(expansion_results['t_abs_gyr']))):
            t_abs = expansion_results['t_abs_gyr'][i]
            t_rel = expansion_results['t_rel_normalized'][i]
            a_abs = expansion_results['a_abs'][i]
            a_rel = expansion_results['a_rel'][i]
            z = expansion_results['z_values'][i]
            T_z = expansion_results['time_transform_factor'][i]
            
            print(f"{t_abs:<12.1f} {t_rel:<12.1f} {a_abs:<12.2e} {a_rel:<12.2e} {z:<10.3f} {T_z:<12.6f}")
    
    print()
    
    # –¢–µ—Å—Ç 6: –°—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–∏ –∞–Ω–∞–ª–∏–∑
    print("üìà –¢–ï–°–¢ 6: –°—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–∏ –∞–Ω–∞–ª–∏–∑ –Ω–∞ —Ä–µ–∑—É–ª—Ç–∞—Ç–∏—Ç–µ")
    print("-" * 70)
    
    if expansion_results:
        print("–°–¢–ê–¢–ò–°–¢–ò–ö–ò –ù–ê –†–ê–ó–®–ò–†–ï–ù–ò–Ø–¢–ê:")
        
        # –ò–∑—á–∏—Å–ª—è–≤–∞–º–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        a_abs_mean = np.mean(expansion_results['a_abs'])
        a_abs_std = np.std(expansion_results['a_abs'])
        a_rel_mean = np.mean(expansion_results['a_rel'])
        a_rel_std = np.std(expansion_results['a_rel'])
        
        ratio_abs_rel = np.array(expansion_results['a_rel']) / np.array(expansion_results['a_abs'])
        ratio_mean = np.mean(ratio_abs_rel)
        ratio_std = np.std(ratio_abs_rel)
        
        print(f"  - –ê–±—Å–æ–ª—é—Ç–Ω–æ —Ä–∞–∑—à–∏—Ä–µ–Ω–∏–µ: —Å—Ä–µ–¥–Ω–æ = {a_abs_mean:.2e}, œÉ = {a_abs_std:.2e}")
        print(f"  - –†–µ–ª–∞—Ç–∏–≤–Ω–æ —Ä–∞–∑—à–∏—Ä–µ–Ω–∏–µ: —Å—Ä–µ–¥–Ω–æ = {a_rel_mean:.2e}, œÉ = {a_rel_std:.2e}")
        print(f"  - –°—ä–æ—Ç–Ω–æ—à–µ–Ω–∏–µ a_rel/a_abs: —Å—Ä–µ–¥–Ω–æ = {ratio_mean:.3f}, œÉ = {ratio_std:.3f}")
        print()
        
        # –ê–Ω–∞–ª–∏–∑ –Ω–∞ –≤—Ä–µ–º–µ–≤–∞—Ç–∞ –¥–∏–ª–∞—Ç–∞—Ü–∏—è
        T_z_values = np.array(expansion_results['time_transform_factor'])
        time_dilation = 1 / T_z_values
        
        print("–ê–ù–ê–õ–ò–ó –ù–ê –í–†–ï–ú–ï–í–ê–¢–ê –î–ò–õ–ê–¢–ê–¶–ò–Ø:")
        print(f"  - –ú–∏–Ω–∏–º–∞–ª–Ω–∞ –¥–∏–ª–∞—Ç–∞—Ü–∏—è: {np.min(time_dilation):.2f}x")
        print(f"  - –ú–∞–∫—Å–∏–º–∞–ª–Ω–∞ –¥–∏–ª–∞—Ç–∞—Ü–∏—è: {np.max(time_dilation):.2f}x")
        print(f"  - –°—Ä–µ–¥–Ω–∞ –¥–∏–ª–∞—Ç–∞—Ü–∏—è: {np.mean(time_dilation):.2f}x")
        print(f"  - –ú–µ–¥–∏–∞–Ω–∞ –Ω–∞ –¥–∏–ª–∞—Ç–∞—Ü–∏—è—Ç–∞: {np.median(time_dilation):.2f}x")
    
    print()
    
    # –¢–µ—Å—Ç 7: –ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∞ –∫–æ–Ω—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç
    print("üßÆ –¢–ï–°–¢ 7: –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∞ –∫–æ–Ω—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç")
    print("-" * 70)
    
    print("–¢–ï–°–¢–û–í–ï –ó–ê –ú–ê–¢–ï–ú–ê–¢–ò–ß–ï–°–ö–ê –ö–û–ù–°–ò–°–¢–ï–ù–¢–ù–û–°–¢:")
    
    # –¢–µ—Å—Ç 1: T(z) —Å–≤–æ–π—Å—Ç–≤–∞
    z_test = 1.0
    T_z = time_model.time_transformation_factor(z_test)
    expected_T_z = 1 / (1 + z_test)**(3/2)
    
    print(f"  1. T(z={z_test}): –∏–∑—á–∏—Å–ª–µ–Ω–æ = {T_z:.6f}, –æ—á–∞–∫–≤–∞–Ω–æ = {expected_T_z:.6f}")
    print(f"     –†–∞–∑–ª–∏–∫–∞: {abs(T_z - expected_T_z):.2e} {'‚úÖ' if abs(T_z - expected_T_z) < 1e-10 else '‚ùå'}")
    
    # –¢–µ—Å—Ç 2: –ü–ª—ä—Ç–Ω–æ—Å—Ç –ø—Ä–∏–±–ª–∏–∂–µ–Ω–∏–µ
    rho_z = time_model.density_approximation(z_test)
    expected_rho = (1 + z_test)**3
    
    print(f"  2. œÅ(z={z_test}): –∏–∑—á–∏—Å–ª–µ–Ω–æ = {rho_z:.6f}, –æ—á–∞–∫–≤–∞–Ω–æ = {expected_rho:.6f}")
    print(f"     –†–∞–∑–ª–∏–∫–∞: {abs(rho_z - expected_rho):.2e} {'‚úÖ' if abs(rho_z - expected_rho) < 1e-10 else '‚ùå'}")
    
    # –¢–µ—Å—Ç 3: –ò–Ω—Ç–µ–≥—Ä–∞–ª –Ω–∞ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª–Ω–æ—Ç–æ –≤—Ä–µ–º–µ
    t_abs_test = 10e9
    t_rel_computed = time_model.compute_relative_time(np.array([t_abs_test]))[0]
    t_rel_expected = (2/5) * t_abs_test**(5/2)
    
    print(f"  3. t_rel({t_abs_test/1e9:.1f} Gyr): –∏–∑—á–∏—Å–ª–µ–Ω–æ = {t_rel_computed:.2e}, –æ—á–∞–∫–≤–∞–Ω–æ = {t_rel_expected:.2e}")
    print(f"     –û—Ç–Ω–æ—Å–∏—Ç–µ–ª–Ω–∞ —Ä–∞–∑–ª–∏–∫–∞: {abs(t_rel_computed - t_rel_expected)/t_rel_expected:.2e} {'‚úÖ' if abs(t_rel_computed - t_rel_expected)/t_rel_expected < 1e-10 else '‚ùå'}")
    
    # –¢–µ—Å—Ç 4: –•—ä–±—ä–ª–æ–≤ –ø–∞—Ä–∞–º–µ—Ç—ä—Ä
    H_z = redshift_model.hubble_parameter(z_test)
    expected_H_z = redshift_model.H0_SI * (1 + z_test)**(3/2)
    
    print(f"  4. H(z={z_test}): –∏–∑—á–∏—Å–ª–µ–Ω–æ = {H_z:.2e}, –æ—á–∞–∫–≤–∞–Ω–æ = {expected_H_z:.2e}")
    print(f"     –†–∞–∑–ª–∏–∫–∞: {abs(H_z - expected_H_z):.2e} {'‚úÖ' if abs(H_z - expected_H_z) < 1e-10 else '‚ùå'}")
    
    print()
    
    # –¢–µ—Å—Ç 8: –§–∏–∑–∏—á–µ—Å–∫–∏ –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏–∏
    print("üî¨ –¢–ï–°–¢ 8: –§–∏–∑–∏—á–µ—Å–∫–∏ –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏–∏")
    print("-" * 70)
    
    print("–§–ò–ó–ò–ß–ï–°–ö–ò –ó–ù–ê–ß–ï–ù–ò–Ø –ù–ê –†–ï–ó–£–õ–¢–ê–¢–ò–¢–ï:")
    
    # –ö–æ—Å–º–∏—á–µ—Å–∫–∏ –≤—Ä–µ–º–µ–≤–∏ –º–∞—â–∞–±–∏
    print("  –ö–û–°–ú–ò–ß–ï–°–ö–ò –í–†–ï–ú–ï–í–ò –ú–ê–©–ê–ë–ò:")
    cosmic_events = [
        ("–°—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ –ø—ä—Ä–≤–∏—Ç–µ –∑–≤–µ–∑–¥–∏", 0.4e9, 15.0),
        ("–ï–ø–æ—Ö–∞ –Ω–∞ —Ä–µ–∏–æ–Ω–∏–∑–∞—Ü–∏—è", 1.0e9, 6.0),
        ("–ü–∏–∫ –Ω–∞ –∑–≤–µ–∑–¥–æ–æ–±—Ä–∞–∑—É–≤–∞–Ω–µ", 3.0e9, 2.0),
        ("–û–±—Ä–∞–∑—É–≤–∞–Ω–µ –Ω–∞ –°–ª—ä–Ω—á–µ–≤–∞—Ç–∞ —Å–∏—Å—Ç–µ–º–∞", 9.2e9, 0.46),
        ("–°–µ–≥–∞", 13.8e9, 0.0)
    ]
    
    print(f"  {'–°—ä–±–∏—Ç–∏–µ':<30} {'–í—ä–∑—Ä–∞—Å—Ç (Gyr)':<12} {'z':<8} {'–î–∏–ª–∞—Ç–∞—Ü–∏—è':<12} {'T(z)':<12}")
    print("  " + "-" * 75)
    
    for event, age, z in cosmic_events:
        T_z = time_model.time_transformation_factor(z)
        dilation = 1 / T_z
        
        print(f"  {event:<30} {age/1e9:<12.1f} {z:<8.1f} {dilation:<12.1f} {T_z:<12.6f}")
    
    print()
    
    # –¢–µ—Å—Ç 9: –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å –Ω–∞–±–ª—é–¥–µ–Ω–∏—è
    print("üåü –¢–ï–°–¢ 9: –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å –∫–æ—Å–º–æ–ª–æ–≥–∏—á–Ω–∏ –Ω–∞–±–ª—é–¥–µ–Ω–∏—è")
    print("-" * 70)
    
    print("–°–†–ê–í–ù–ï–ù–ò–ï –° –ù–ê–ë–õ–Æ–î–ê–¢–ï–õ–ù–ò –î–ê–ù–ù–ò:")
    print("–ê–Ω–∞–ª–∏–∑–∏—Ä–∞–º–µ –∫–∞–∫ –Ω–∞—à–∏—è—Ç –º–æ–¥–µ–ª —Å–µ —Å—Ä–∞–≤–Ω—è–≤–∞ —Å –∏–∑–≤–µ—Å—Ç–Ω–∏ –Ω–∞–±–ª—é–¥–µ–Ω–∏—è...")
    print()
    
    # –í—ä–∑—Ä–∞—Å—Ç –Ω–∞ –Ω–∞–π-—Å—Ç–∞—Ä–∏—Ç–µ –∑–≤–µ–∑–¥–∏
    oldest_stars_age = 13.2e9  # –≥–æ–¥–∏–Ω–∏
    our_universe_age = 13.8e9
    
    print(f"  - –í—ä–∑—Ä–∞—Å—Ç –Ω–∞ –Ω–∞–π-—Å—Ç–∞—Ä–∏—Ç–µ –∑–≤–µ–∑–¥–∏: {oldest_stars_age/1e9:.1f} Gyr")
    print(f"  - –í—ä–∑—Ä–∞—Å—Ç –Ω–∞ –í—Å–µ–ª–µ–Ω–∞—Ç–∞ –≤ –Ω–∞—à–∏—è –º–æ–¥–µ–ª: {our_universe_age/1e9:.1f} Gyr")
    print(f"  - –†–∞–∑–ª–∏–∫–∞: {(our_universe_age - oldest_stars_age)/1e9:.1f} Gyr")
    print(f"  - –°—ä–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç: {'‚úÖ –î–ê' if our_universe_age > oldest_stars_age else '‚ùå –ù–ï'}")
    print()
    
    # –¢–µ—Å—Ç 10: –§–∏–Ω–∞–ª–Ω–∏ –∑–∞–∫–ª—é—á–µ–Ω–∏—è
    print("üéØ –¢–ï–°–¢ 10: –ù–∞—É—á–Ω–∏ –∑–∞–∫–ª—é—á–µ–Ω–∏—è")
    print("-" * 70)
    
    print("–ù–ê–£–ß–ù–ò –ó–ê–ö–õ–Æ–ß–ï–ù–ò–Ø –û–¢ –ê–ù–ê–õ–ò–ó–ê:")
    print("‚úÖ –í—Ä–µ–º–µ–≤–∞—Ç–∞ —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏—è T(z) = 1/(1+z)^(3/2) –µ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∫–æ–Ω—Å–∏—Å—Ç–µ–Ω—Ç–Ω–∞")
    print("‚úÖ –ü–ª—ä—Ç–Ω–æ—Å—Ç—Ç–∞ —Å–ª–µ–¥–≤–∞ –æ—á–∞–∫–≤–∞–Ω–∞—Ç–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç œÅ(z) ‚àù (1+z)¬≥")
    print("‚úÖ –†–µ–ª–∞—Ç–∏–≤–Ω–æ—Ç–æ –≤—Ä–µ–º–µ —Å–µ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–∞ –ø—Ä–∞–≤–∏–ª–Ω–æ")
    print("‚úÖ –•—ä–±—ä–ª–æ–≤–∏—è—Ç –ø–∞—Ä–∞–º–µ—Ç—ä—Ä —Å–µ –ø—Ä–æ–º–µ–Ω—è —Å–ø–æ—Ä–µ–¥ —Ç–µ–æ—Ä–∏—è—Ç–∞")
    print("‚úÖ –§–∏–∑–∏—á–µ—Å–∫–∏—Ç–µ –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏–∏ —Å–∞ —Ä–∞–∑—É–º–Ω–∏")
    print("‚úÖ –ú–æ–¥–µ–ª—ä—Ç –µ —Å—ä–≤–º–µ—Å—Ç–∏–º —Å –Ω–∞–±–ª—é–¥–∞—Ç–µ–ª–Ω–∏—Ç–µ –¥–∞–Ω–Ω–∏")
    print()
    
    print("–ö–õ–Æ–ß–û–í–ò –û–¢–ö–†–ò–¢–ò–Ø:")
    print("üåü –í—Ä–µ–º–µ–≤–∞—Ç–∞ –¥–∏–ª–∞—Ç–∞—Ü–∏—è –Ω–∞—Ä–∞—Å—Ç–≤–∞ –µ–∫—Å–ø–æ–Ω–µ–Ω—Ü–∏–∞–ª–Ω–æ —Å z")
    print("üåü –†–∞–Ω–Ω–∏—Ç–µ –µ–ø–æ—Ö–∏ —Å–∞ —Å–∏–ª–Ω–æ –∫–æ–º–ø—Ä–µ—Å–∏—Ä–∞–Ω–∏ –≤ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª–Ω–æ—Ç–æ –≤—Ä–µ–º–µ")
    print("üåü –ê–±—Å–æ–ª—é—Ç–Ω–æ—Ç–æ –≤—Ä–µ–º–µ –ø–æ–∑–≤–æ–ª—è–≤–∞ –ª–∏–Ω–µ–π–Ω–∏ —Ä–∞–∑—à–∏—Ä–µ–Ω–∏—è")
    print("üåü –†–µ–ª–∞—Ç–∏–≤–Ω–æ—Ç–æ –≤—Ä–µ–º–µ –ø–æ–∫–∞–∑–≤–∞ –Ω–µ–ª–∏–Ω–µ–π–Ω–∏ –µ—Ñ–µ–∫—Ç–∏")
    print("üåü –ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ç–µ —Ñ–æ—Ä–º—É–ª–∏ —Å–∞ —Ç–æ—á–Ω–∏ –∏ –∫–æ–Ω—Å–∏—Å—Ç–µ–Ω—Ç–Ω–∏")
    print()
    
    print("=" * 100)
    print("       –î–ï–¢–ê–ô–õ–ù–ò–Ø–¢ –¢–ï–°–¢ –ù–ê –ê–ö–° –¢–†–ê–ù–°–§–û–†–ú–ê–¶–ò–Ø–¢–ê –ó–ê–í–™–†–®–ò –£–°–ü–ï–®–ù–û!")
    print("=" * 100)
    
    return {
        'time_model': time_model,
        'redshift_model': redshift_model,
        'analyzer': analyzer,
        'expansion_results': expansion_results,
        'success': True
    }

if __name__ == "__main__":
    detailed_acs_transformation_test() 